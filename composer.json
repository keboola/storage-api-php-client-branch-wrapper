{
    "name": "keboola/storage-api-php-client-branch-wrapper",
    "license": "MIT",
    "type": "library",
    "description": "Wrapper for Storage API clients for Dev/Prod mode",
    "keywords": [
        "keboola",
        "storage api",
        "branch",
        "client"
    ],
    "authors": [
        {
            "name": "Keboola",
            "email": "devel@keboola.com"
        }
    ],
    "autoload": {
        "psr-4": {
            "Keboola\\StorageApiBranch\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Keboola\\StorageApiBranch\\Tests\\": "tests/"
        }
    },
    "require": {
        "php": ">=8.2",
        "ext-json": "*",
        "keboola/storage-api-client": "^15.3",
        "symfony/http-foundation": "^5.2|^6.0|^7.0",
        "symfony/validator": "^5.2|^6.0|^7.0"
    },
    "require-dev": {
        "infection/infection": "^0.27",
        "keboola/coding-standard": ">=13.0",
        "phpstan/phpstan": "^1.5",
        "phpstan/phpstan-phpunit": "^1.1",
        "phpunit/phpunit": "^9.5",
        "symfony/dotenv": "^6.1"
    },
    "scripts": {
        "pre-autoload-dump": "Aws\\Script\\Composer\\Composer::removeUnusedServices",
        "phpcs": "phpcs --extensions=php src tests",
        "phpcbf": "phpcbf --extensions=php src tests",
        "phpstan": "phpstan analyse --no-progress -c phpstan.neon.dist",
        "tests": "phpunit --coverage-clover /tmp/build-logs/clover.xml --coverage-xml=/tmp/build-logs/coverage-xml --log-junit=/tmp/build-logs/phpunit.junit.xml",
        "infection": "infection --threads=4 --min-covered-msi=90 --coverage=/tmp/build-logs --only-covered",
        "ci": [
            "@composer validate --no-check-all --strict",
            "@phpcs",
            "@phpstan",
            "@tests",
            "@infection"
        ]
    },
    "config": {
        "lock": false,
        "sort-packages": true,
        "process-timeout": 3600,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "infection/extension-installer": true
        }
    },
    "extra": {
        "aws/aws-sdk-php": [
            "S3",
            "Kms",
            "Sts"
        ]
    }
}
